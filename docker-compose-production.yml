version: '3.3'
services:
  consolidated-server-data:
    container_name: cs-postgres
    image: postgres:12-alpine
    restart: always
    env_file:
    - ./prod/database/postgres/database.env # configure postgres
    ports:
    - 5432:5432
    volumes:
    - /var/lib/consolidated-server/postgresdata:/var/lib/postgresql/data
    - ./prod/database/postgres/init/:/docker-entrypoint-initdb.d/
    networks:
    - backend-network

  hapi-fhir-jpaserver:
    container_name: cs-hapi-fhir-jpaserver
    image: hapiproject/hapi:latest
    restart: always
    ports:
    - 8444:8443
    volumes:
    - ./prod/properties/application.yaml:/data/hapi/application.yaml
    - ./prod/tomcat/hapi_server.xml:/usr/local/tomcat/conf/server.xml
    - ./prod/ssl/cs.keystore:/usr/local/tomcat/certs/keystore
    - ./prod/ssl/cs.truststore:/usr/local/tomcat/certs/truststore
    environment: 
      SPRING_CONFIG_LOCATION: file:///data/hapi/application.yaml
    networks:
    - backend-network
    
  mongo:
    container_name: openhim-mongo
    restart: always
    ports:
    - 27017:27017
    image: mongo:3.4 
    environment:
    - MONGO_INITDB_ROOT_USERNAME_FILE=/var/lib/openhim/mongo_root_user
    - MONGO_INITDB_ROOT_PASSWORD_FILE=/var/lib/openhim/mongo_root_password
    - MONGO_INITDB_USERNAME_FILE=/var/lib/openhim/mongo_user
    - MONGO_INITDB_PASSWORD_FILE=/var/lib/openhim/mongo_password
    volumes:
     - /var/lib/consolidated-server/mongodata:/data/db
     - ./prod/database/mongo/init/:/docker-entrypoint-initdb.d/
     - ./prod/database/mongo/db_root_user:/var/lib/openhim/mongo_root_user
     - ./prod/database/mongo/db_root_password:/var/lib/openhim/mongo_root_password
     - ./prod/database/mongo/db_user:/var/lib/openhim/mongo_user
     - ./prod/database/mongo/db_password:/var/lib/openhim/mongo_password
    networks:
    - backend-network
    
  openhim-core:
    container_name: openhim-core
    restart: always
    image: jembi/openhim-core
    env_file:
    - prod/properties/openhim.env
    ports:
    - 8080:8080
    - 5000:5000
    - 5001:5001
    - 5050:5050
    - 5051:5051
    - 5052:5052
    - 7788:7788
    depends_on:
    - mongo
    networks:
    - frontend-network
    - backend-network
    
  #accessed through nginx container
  openhim-console:
    container_name: openhim-console
    restart: always
    image: jembi/openhim-console
    volumes:
    - ./prod/conf/nginx_openhim-console.conf:/etc/nginx/conf.d/default.conf
    - ./prod/ssl/cs.crt:/etc/nginx/serverCerts/cs.crt
    - ./prod/ssl/cs.key:/etc/nginx/serverCerts/cs.key
    - ./prod/ssl/key_pass:/etc/nginx/private/key_pass
    - ./prod/properties/default.json:/usr/share/nginx/html/config/default.json
    networks:
    - frontend-network
    - backend-network
    
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
    - 80:80
    - 443:443
    volumes:
    - ./prod/conf/nginx_main.conf:/etc/nginx/conf.d/default.conf
    - ./prod/ssl/cs_frontend.crt:/etc/nginx/serverCerts/cs.crt
    - ./prod/ssl/cs_frontend.key:/etc/nginx/serverCerts/cs.key
    - ./prod/ssl/key_pass_frontend:/etc/nginx/private/key_pass
    networks:
    - frontend-network
#    secrets:
#    - cert
#    - key
#this is here since we can't just pull a built image from the cloud with our libraries
#   itech-fhir-libraries:
#     image: itech-fhir-libraries
#     build:
#       context: .
#       dockerfile: docker/docker-build/Dockerfile
#   consolidated-server-data:
#     image: postgres:12-alpine
#     env_file:
#     - ./prod/database/postgres/database.env # configure postgres
#     ports:
#     - 5432:5432
#     volumes:
#     - /var/lib/consolidated-server/data:/var/lib/postgresql/data
#     - ./prod/database/postgres/dbInit.sql:/docker-entrypoint-initdb.d/dbInit.sql
#   cs-frontend:
#     image: cs-frontend
#     build:
#       context: ./cs-frontend
#       dockerfile: ./Dockerfile.prod
#     depends_on:
#     - fhir-server-management.openelis.org
#     restart: always
#     networks:
#     - frontend-network
#   fhir-server-management.openelis.org:
#     image: fhir-server-management-webapp
#     build:
#       context: ./fhir-server-management-webapp
#       dockerfile: docker/docker-build/Dockerfile
#     restart: always
#     ports:
#     - 8443:8443
#     secrets:
#     - source: extra.properties
#     - source: keystore
#     - source: truststore
#   fhir-proxy.openelis.org:
#     image: fhir-proxy-webapp
#     build:
#       context: ./fhir-proxy-webapp
#       dockerfile: docker/docker-build/Dockerfile
#     restart: always
#     ports:
#     - 9000:9000
#     secrets:
#     - source: extra.properties
#     - source: keystore
#     - source: truststore
#  auth.openelis.org:
#    image: quay.io/keycloak/keycloak:10.0.2
#    restart: always
#    environment:
#    - DB_VENDOR=postgres
#    - DB_ADDR=host.openelis.org
#    - DB_PORT=5432
#    - DB_DATABASE=consolidated_server
#    - DB_SCHEMA=keycloak
#    - DB_USER_FILE=/run/secrets/db_user
#    - DB_PASSWORD_FILE=/run/secrets/db_password
#    volumes:
#    - ./prod/ssl/cs.crt:/etc/x509/https/tls.crt
#    - ./prod/ssl/cs.key:/etc/x509/https/tls.key
networks:
  frontend-network: 
  backend-network: 
#secrets:
#  hapi.properties:
#    file: ./prod/properties/hapi.properties
#  extra.properties:
#    file: ./prod/properties/extra.properties
#  truststore:
#    file: ./prod/ssl/cs.truststore
#  keystore:
#    file: ./prod/ssl/cs.keystore
#  cert:
#    file: ./prod/ssl/cs.crt
#  key:
#    file: ./prod/ssl/cs.key
#  db_user:
#    file: ./prod/database/postgres/user
#  db_password:
#    file: ./prod/database/postgres/password