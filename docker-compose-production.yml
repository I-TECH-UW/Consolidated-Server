version: '3.8'

x-logging:
  &local-logging
  driver: "local"
  options:
    max-size: "20m"
    max-file: "50"

x-loki-logging:
  &loki-logging
  driver: "loki"
  options:
    max-size: "20m"
    max-file: "50"
    loki-url: "[% loki_url %]"
    loki-external-labels: "container_name={{.Name}},hostname=[% host_name %]"
    loki-pipeline-stages: |
          - multiline:
              firstline: '^\d{4}-\d{2}-\d{2}[T ]?\d{2}:\d{2}:\d{2}.\d{3}'
          - labeldrop:
              - compose_project
              - compose_service
              - filename
              - source
              - stream
              - swarm_service
              - swarm_stack
              
services:
  consolidated-server-data:
    container_name: cs-postgres
    image: postgres:12-alpine
    restart: always
    env_file:
    - ./prod/database/postgres/database.env # configure postgres
    ports:
    - 5432:5432
    volumes:
    - /var/lib/consolidated-server/postgresdata:/var/lib/postgresql/data
    - ./prod/database/postgres/init/:/docker-entrypoint-initdb.d/
    networks:
    - backend-network
    logging: *local-logging
    healthcheck:
      test: ["CMD", "pg_isready"]
      timeout: 10s
      interval: 30s
      retries: 3

  fhir-hose.openelis.org:
    container_name: cs-fhir-hose
    image: fhir-hose
    build:
      context: ./bulk-data-requester/
      dockerfile: docker/docker-build/Dockerfile
    restart: always
    volumes:
      - ./prod/ssl/cs.keystore:/usr/local/tomcat/certs/keystore
      - ./prod/ssl/cs.truststore:/usr/local/tomcat/certs/truststore
      - ./bulk-data-requester/docker/healthcheck.sh:/healthcheck.sh
    networks:
      - backend-network
    logging: *local-logging
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      timeout: 10s
      interval: 30s
      retries: 3

  cs-fhir.openelis.org:
    container_name: cs-hapi-fhir-jpaserver
    build:
      context: ./prod/fhir/
      dockerfile: Dockerfile
    restart: always
    ports:
    - 8444:8443
    volumes:
    - ./prod/properties/application.yaml:/data/hapi/application.yaml
    - ./prod/tomcat/hapi_server.xml:/opt/bitnami/tomcat/conf/server.xml
    - ./prod/ssl/cs.keystore:/opt/bitnami/tomcat/certs/keystore
    - ./prod/ssl/cs.truststore:/opt/bitnami/tomcat/certs/truststore
    - ./prod/fhir/healthcheck.sh:/healthcheck.sh
    environment: 
      SPRING_CONFIG_LOCATION: file:///data/hapi/application.yaml
    networks:
    - backend-network
    logging: *local-logging
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      timeout: 10s
      interval: 30s
      retries: 3
    
  mongo:
    container_name: openhim-mongo
    restart: always
    ports:
    - 27017:27017
    image: mongo:4.2 
    environment:
    - MONGO_INITDB_ROOT_USERNAME_FILE=/var/lib/openhim/mongo_root_user
    - MONGO_INITDB_ROOT_PASSWORD_FILE=/var/lib/openhim/mongo_root_password
    - MONGO_INITDB_USERNAME_FILE=/var/lib/openhim/mongo_user
    - MONGO_INITDB_PASSWORD_FILE=/var/lib/openhim/mongo_password
    volumes:
     - /var/lib/consolidated-server/mongodata:/data/db
     - ./prod/database/mongo/init/:/docker-entrypoint-initdb.d/
     - ./prod/database/mongo/db_root_user:/var/lib/openhim/mongo_root_user
     - ./prod/database/mongo/db_root_password:/var/lib/openhim/mongo_root_password
     - ./prod/database/mongo/db_user:/var/lib/openhim/mongo_user
     - ./prod/database/mongo/db_password:/var/lib/openhim/mongo_password
    networks:
    - backend-network
    logging: *local-logging
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb://mongo:27017/openhim --quiet
      timeout: 10s
      interval: 30s
      retries: 3
    
  cs-openhim-core.openelis.org:
    container_name: openhim-core
    restart: always
    build:
      context: ./prod/openhim-core/
      dockerfile: Dockerfile
    env_file:
    - prod/properties/openhim.env
    ports:
    - 8080:8080
    - 5000:5000
    - 5001:5001
    - 5050:5050
    - 5051:5051
    - 5052:5052
    - 7788:7788
    depends_on:
    - mongo
    volumes:
    - ./prod/properties/openhim-core_default.json:/usr/src/app/config/default.json
    networks:
    - frontend-network
    - backend-network
    logging: *local-logging
    healthcheck:
      test: "curl -sSk https://openhim-core:8080/heartbeat || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
    
  #accessed through nginx container
  openhim-console:
    container_name: openhim-console
    restart: always
    image: jembi/openhim-console:v1.18.2
    environment:
    - OPENHIM_CORE_MEDIATOR_HOSTNAME=host.openelis.org
    volumes:
    - ./prod/conf/nginx_openhim-console.conf:/etc/nginx/conf.d/default.conf
    - ./prod/ssl/cs.crt:/etc/nginx/serverCerts/cs.crt
    - ./prod/ssl/cs.key:/etc/nginx/serverCerts/cs.key
    - ./prod/ssl/key_pass:/etc/nginx/private/key_pass
    - ./prod/properties/openhim-console_default.json:/usr/share/nginx/html/config/default.json
    networks:
    - frontend-network
    - backend-network
    logging: *local-logging
    healthcheck:
      test: "curl -sSk https://openhim-console || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
    
  nginx:
    image: nginx:1.21.6
    container_name: nginx
    restart: always
    ports:
    - 80:80
    - 443:443
    volumes:
    - ./prod/conf/nginx_main.conf:/etc/nginx/conf.d/default.conf
    - ./prod/ssl/cs_frontend.crt:/etc/nginx/serverCerts/cs.crt
    - ./prod/ssl/cs_frontend.key:/etc/nginx/serverCerts/cs.key
    - ./prod/ssl/key_pass_frontend:/etc/nginx/private/key_pass
    networks:
    - frontend-network
    logging: *local-logging
    healthcheck:
      test: "service nginx status || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
    
  autoheal:
    container_name: autoheal
    image: willfarrell/autoheal:1.2.0
    tty: true
    restart: always
    networks:
      - frontend-network
      - backend-network
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging: *local-logging
    
networks:
  frontend-network: 
  backend-network: 
